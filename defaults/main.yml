---

# Project source code URL: https://github.com/plexinc

plex_enabled: true

plex_identifier: plex

plex_uid: ''
plex_gid: ''
plex_timezone: 'Etc/UTC'

plex_version: 1.41.4
plex_arch: amd64

# The hostname at which plex is served.
plex_hostname: ''

# The path at which plex is served.
# This value must either be `/` or not end with a slash (e.g. `/plex`).
plex_path_prefix: /

plex_base_path: "{{ plex_identifier }}"
plex_data_path: "{{ plex_base_path }}/data"

# The path where media files are stored on the host system
plex_media_path: "{{ plex_base_path }}/media"

# The path at which plex_media_path is mounted to inside the container
plex_media_bind_path: "/media"

plex_container_image: "{{ plex_container_image_registry_prefix }}linuxserver/plex:{{ plex_container_image_tag }}"
plex_container_image_tag: "{{ plex_version }}"
plex_container_image_registry_prefix: lscr.io/
plex_container_image_force_pull: "{{ plex_container_image.endswith(':latest') }}"

# The base container network. It will be auto-created by this role if it doesn't exist already.
plex_container_network: "{{ plex_identifier }}"

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
plex_container_additional_networks: "{{ (plex_container_additional_networks_default + plex_container_additional_networks_auto + plex_container_additional_networks_custom) | unique }}"
plex_container_additional_networks_default: []
plex_container_additional_networks_auto: []
plex_container_additional_networks_custom: []

# Controls how long to wait for the container to stop gracefully before killing it.
# Because `devture_systemd_docker_base_container_stop_grace_time_seconds` may be quite short and databases are more important to stop gracefully,
# we default to at least 30 seconds.
plex_container_stop_grace_time_seconds: "{{ [devture_systemd_docker_base_container_stop_grace_time_seconds, 30] | max }}"

# List of systemd services that the Plex systemd service depends on
plex_systemd_required_services_list: "{{ (plex_systemd_required_services_list_default + plex_systemd_required_services_list_auto + plex_systemd_required_services_list_custom) | unique }}"
plex_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
plex_systemd_required_services_list_auto: []
plex_systemd_required_services_list_custom: []

# List of systemd services that the Plex systemd service wants
plex_systemd_wanted_services_list: "{{ (plex_systemd_wanted_services_list_default + plex_systemd_wanted_services_list_auto + plex_systemd_wanted_services_list_custom) | unique }}"
plex_systemd_wanted_services_list_default: []
plex_systemd_wanted_services_list_auto: []
plex_systemd_wanted_services_list_custom: []

# For information on all the ports Plex may use, and what they do, see the below docs
# https://github.com/linuxserver/docker-plex#optional-parameters

# The port Plex is serving the HTTP web application on inside the container
plex_container_http_port: 32400

# Controls whether the container exposes the HTTP port
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:32400"), or empty string to not expose.
plex_container_http_bind_port: ""

# The port Plex is serving the DLNA server on inside the container
plex_container_dlna_udp_port: 1900

# Controls whether the container exposes the DLNA UDP port
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:1900"), or empty string to not expose.
plex_container_dlna_udp_bind_port: ""

# The port Plex is serving the DLNA server on inside the container
plex_container_dlna_tcp_port: 1900

# Controls whether the container exposes the 32469 TCP port
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:32469"), or empty string to not expose.
plex_container_dlna_tcp_bind_port: ""

# The port Plex is serving the Bonjour/Avahi server on inside the container
plex_container_bonjour_port: 5353

# Controls whether the container exposes the Bonjour/Avahi port
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:5353"), or empty string to not expose.
plex_container_bonjour_bind_port: ""

# The port Plex is serving the 'Plex for Roku via Plex Companion' server on inside the container
plex_container_roku_port: 8324

# Controls whether the container exposes the 'Plex for Roku via Plex Companion' port
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:8324"), or empty string to not expose.
plex_container_roku_bind_port: ""

# The port Plex is serving the 'GDM network discovery' server on inside the container
plex_container_gdm_port_01: 32410

# Controls whether the container exposes the 'GDM network discovery' port
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:32410"), or empty string to not expose.
plex_container_gdm_bind_port_01: 32410

# The port Plex is serving the 'GDM network discovery' server on inside the container
plex_container_gdm_port_02: 32412

# Controls whether the container exposes the 'GDM network discovery' port
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:32412"), or empty string to not expose.
plex_container_gdm_bind_port_02: 32412

# The port Plex is serving the 'GDM network discovery' server on inside the container
plex_container_gdm_port_03: 32413

# Controls whether the container exposes the 'GDM network discovery' port
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:32413"), or empty string to not expose.
plex_container_gdm_bind_port_03: 32413

# The port Plex is serving the 'GDM network discovery' server on inside the container
plex_container_gdm_port_04: 32414

# Controls whether the container exposes the 'GDM network discovery' port
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:32414"), or empty string to not expose.
plex_container_gdm_bind_port_04: 32414

# To inject your own other container labels, see `plex_container_labels_additional_labels`.
plex_container_labels_traefik_enabled: true
plex_container_labels_traefik_docker_network: "{{ plex_container_network }}"
plex_container_labels_traefik_hostname: "{{ plex_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/plex`).
plex_container_labels_traefik_path_prefix: "{{ plex_path_prefix }}"
plex_container_labels_traefik_rule: "Host(`{{ plex_container_labels_traefik_hostname }}`){% if plex_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ plex_container_labels_traefik_path_prefix }}`){% endif %}"
plex_container_labels_traefik_priority: 0
plex_container_labels_traefik_entrypoints: web-secure
plex_container_labels_traefik_tls: "{{ plex_container_labels_traefik_entrypoints != 'web' }}"
plex_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# plex_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# plex_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
plex_container_labels_additional_labels: ''

# plex_container_additional_environment_variables contains a multiline string with additional environment variables to pass to the container.
#
# Example:
# plex_container_additional_environment_variables: |
#   VAR=1
#   ANOTHER=value
plex_container_additional_environment_variables: ''

# A list of additional "volumes" to mount in the container.
#
# See the `--mount` documentation for the `docker run` command.
#
# Example:
# plex_container_additional_volumes:
#   - type: bind
#     src: /path/on/the/host
#     dst: /data
#   - type: bind
#     src: /another-path/on/the/host
#     dst: /read-only
#     options: readonly
plex_container_additional_volumes: []

# A list of extra arguments to pass to the container
plex_container_extra_arguments: []
